{
  "title": "Omlet Smart Coop",
  "config": {
    "step": {
      "user": {
        "title": "Set up Omlet Smart Coop",
        "description": "Enter your Omlet API key to connect. After setup, you can enable webhooks in Options to receive real-time updates (a full webhook URL will be shown).",
        "data": {
          "api_key": "API Key"
        }
      }
    },
    "error": {
      "invalid_auth": "Invalid API key. Please verify and try again.",
      "cannot_connect": "Unable to connect to the Omlet API. Please check your API key.",
      "unknown": "An unknown error occurred. Please try again later."
    },
    "abort": {
      "already_configured": "This API key is already configured."
    }
  },
  "options": {
    "step": {
      "user": {
        "errors": {
          "invalid_polling_interval": "Invalid polling interval. Must be between 60 and 86400 seconds."
        }
      }
    }
  },
  "options": {
    "step": {
      "user": {
        "title": "Omlet Smart Coop Options",
        "description": "Configure update method and webhook settings.",
        "data": {
          "polling_interval": "Polling interval (seconds)",
          "enable_webhooks": "Enable webhooks",
          "webhook_token": "Webhook token (optional)",
          "disable_polling": "Disable polling (webhooks only)"
        },
        "data_description": {
          "polling_interval": "How often to poll the Omlet API when polling is enabled.",
          "enable_webhooks": "Enable a webhook at a random endpoint (shown in a notification) to refresh entities immediately on push events.",
          "webhook_token": "Shared secret to validate Omlet webhooks. Enter the same token in Omlet â†’ Manage Webhooks.",
          "disable_polling": "Stop scheduled polling and rely only on webhooks for real-time updates."
        }
      }
    }
  },
  "device_automation": {
    "action_type": {
      "open_door": "Open the coop door",
      "close_door": "Close the coop door",
      "turn_light_on": "Turn the light on",
      "turn_light_off": "Turn the light off"
    }
  },
  "entity": {
    "sensor": {
      "battery_level": {
        "name": "Battery Level"
      },
      "wifi_signal_strength": {
        "name": "WiFi Signal Strength"
      },
      "firmware_version": {
        "name": "Firmware Version"
      }
    },
    "switch": {
      "light": {
        "name": "Light"
      },
      "door": {
        "name": "Door"
      }
    }
  }
}
